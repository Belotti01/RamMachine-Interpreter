@typeparam TValue
@using RamMachineInterpreter.Data;

@if(Memory is not null)
{
	<table class="table table-bordered table-dark table-striped">
		<thead>
			<tr>
				<th scope="col" class="text-center w-50"><MudText>Accumulator</MudText></th>
			</tr>
		</thead>
		<tbody>
			<tr>
					<td class="text-center"><MudText>@Memory.Accumulator</MudText></td>
			</tr>
		</tbody>
	</table>

	<table class="table table-striped table-dark table-bordered table-responsive">
		<thead>
			<tr>
				<th class="text-center" colspan="11">Registries</th>
			</tr>
			<tr>
				<th scope="col" class="text-center" style="width: 10%;">#</th>
				@for(uint i = 0; i < 10; i++)
				{
					<th scope="col" class="text-center" style="width: 9%;">@i</th>
				}
			</tr>
		</thead>
		<tbody>
			@for(ulong d = 0; d <= Memory.Size; d += 10)
			{
				ulong td = d;
				<tr>
					<th scope="row" class="text-end">@d - @(d + 9)</th>
					@for(ulong i = 0; i < 10; i++)
					{
						ulong ti = i;
						@if (Memory.HasValue(td+ti))
						{
								<td class="text-center fw-bold"><MudText Class="bg-gradient fw-bolder">@Memory[td+ti]</MudText></td>
						}
						else 
						{
								<td class="text-center">0</td>
						}
					}
				</tr>
			}
		</tbody>
	</table>
}


@code {
	[Parameter]
	public IMemory<TValue>? Memory { get; set; }
}
